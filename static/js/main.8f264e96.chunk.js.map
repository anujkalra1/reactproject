{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","key","email","CardList","console","log","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","target","value","state","names","searchField","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA6BL,EAAMI,QAAQE,MAAlCN,EAAMI,QAAQG,KACvB,4BAA4BP,EAAMI,QAAQI,OAAlCR,EAAMI,QAAQG,SCHXE,EAAW,SAAAT,GAEpB,OADAU,QAAQC,IAAIX,GACL,qBAAKC,UAAU,YAAf,SAEHD,EAAMY,SAASC,KAAI,SAAAP,GAAI,OACrB,cAAC,EAAD,CAAMF,QAASE,UCNZQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAOf,UAAU,SAASgB,KAAK,SAASC,YAAaH,EAAaI,SAAUH,MCoCrEI,E,kDAnCb,aAAc,IAAD,8BACX,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAC,YAAeD,EAAEE,OAAOC,SAbvC,EAAKC,MAAQ,CACXC,MAAO,GACPC,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACI,MAAQM,S,oBAOxC,WAAU,IAAD,EACqBC,KAAKR,MAA1BC,EADA,EACAA,MAAMC,EADN,EACMA,YACPO,EAAmBR,EAAMS,QAAO,SAAA/B,GAAO,OAAIA,EAAQE,KAAK8B,cAAcC,SAASV,EAAYS,kBAEhG,OACC,sBAAKnC,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWc,YAAY,kBAAkBC,aAAciB,KAAKjB,eAC5D,cAAC,EAAD,CAAUJ,SAAUsB,W,GA3BRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f264e96.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className='card-container'>\r\n  <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n  <h2 key={props.monster.key}>{props.monster.name}</h2>\r\n  <p key={props.monster.key}>{props.monster.email}</p>\r\n  </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n    {         \r\n        props.monsters.map(name => (\r\n          <Card monster={name}></Card>\r\n        ))\r\n      }\r\n    </div>\r\n}","import React from 'react';\r\nimport './searchBox.styles.css'\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => {    \r\n    return (\r\n        <input className='search' type='search' placeholder={placeHolder} onChange={handleChange} />\r\n    )\r\n}","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/searchBox.component'; \n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      names: [],\n      searchField:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({names : users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({'searchField': e.target.value})\n  }\n\n  render() {\n    const {names,searchField} = this.state;\n    const filteredMonsters = names.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    \n     return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeHolder='Search Monsters' handleChange={this.handleChange}></SearchBox>\n      <CardList monsters={filteredMonsters}>\n      \n      </CardList>  \n      \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}